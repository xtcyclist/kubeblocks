apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: nebula
  labels:
    {{- include "nebula.labels" . | nindent 4 }}
spec:
  connectionCredential:
    username: root
    password: "$(RANDOM_PASSWD)"
    endpoint: "$(SVC_FQDN):$(SVC_PORT_tcp-nebula)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_tcp-nebula)"
    accesskey: ""
    secretkey: ""
  componentDefs:
    - name: nebula-metad
      configSpecs:
        - name: nebula-metad-config
          templateRef: nebula-metad-config-template
          volumnName: conf
      scriptSpecs:
        - name: nebula-metad-scripts
          templateRef: nebula-graphd-scripts-template
          volumeName: scripts
          defaultMode: 493
      workloadType: Stateful
      characterType: nebula-metad
      probes:
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 9187
      logConfigs:
      service:
        ports:
          - name: tcp-metad
            port: 9559
            targetPort: tcp-metad
      volumeTypes:
        - name: data
          type: data
      podSpec:
        securityContext:
          fsGroup: 1001
        containers:
          - name: nebula-metad
            volumeMounts:
              - name: data
                mountPath: /data
              - name: log
                mountPath: /log
              - name: conf
                mountPath: /conf
              - name: scripts
                mountPath: /scripts
            command: ["/scripts/nebula-metad-start.sh"]
            imagePullPolicy: {{default .Values.nebula.metad.image.pullPolicy "IfNotPresent"}}
            securityContext:
              runAsUser: 0
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /healthz
                port: 9091
                scheme: HTTP
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 10
            readinessProbe:
              failureThreshold: 2
              httpGet:
                path: /healthz
                port: 9091
                scheme: HTTP
              initialDelaySeconds: 5
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 3
            startupProbe:
              failureThreshold: 18
              httpGet:
                path: /healthz
                port: 9091
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 3
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            enableServiceLinks: true
            ports:
              - name: tcp-metad
                containerPort: 9559
              - name: tcp-metrics
                containerPort: 9091
            args:
            env:
              - name: CACHE_SIZE
                valueFrom:
                  resourceFieldRef:
                    divisor: 1Gi
                    resource: limits.memory
        serviceAccountName: default
        terminationGracePeriodSeconds: 300
        volumes:
          - emptyDir: {}
            name: tools
    - name: nebula-storaged
      configSpecs:
        - name: nebula-storaged-config
          templateRef: nebula-storaged-config-template
          volumnName: conf
      scriptSpecs:
        - name: nebula-storaged-scripts
          templateRef: nebula-storaged-scripts-template
          volumeName: scripts
          defaultMode: 493
      workloadType: Stateful
      characterType: nebula-storaged
      probes:
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 9187
      logConfigs:
      service:
        ports:
          - name: tcp-storaged
            port: 9669
            targetPort: tcp-storaged
      volumeTypes:
        - name: data
          type: data
      podSpec:
        securityContext:
          fsGroup: 1001
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        containers:
          - name: nebula-storaged
            volumeMounts:
              - name: data
                mountPath: /data
              - name: conf
                mountPath: /conf
              - name: scripts
                mountPath: /scripts
              - name: log
                mountPath: /log
            command: ["/scripts/nebula-storaged-start.sh"]
            imagePullPolicy: {{default .Values.nebula.storaged.image.pullPolicy "IfNotPresent"}}
            securityContext:
              runAsUser: 0
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /healthz
                port: 9091
                scheme: HTTP
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 10
            readinessProbe:
              failureThreshold: 2
              httpGet:
                path: /healthz
                port: 9091
                scheme: HTTP
              initialDelaySeconds: 5
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 3
            startupProbe:
              failureThreshold: 18
              httpGet:
                path: /healthz
                port: 9091
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 3
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            enableServiceLinks: true
            ports:
              - name: tcp-storaged
                containerPort: 9669
              - name: tcp-metrics
                containerPort: 9091
            args:
            env:
              - name: CACHE_SIZE
                valueFrom:
                  resourceFieldRef:
                    divisor: 1Gi
                    resource: limits.memory
        serviceAccountName: default
        terminationGracePeriodSeconds: 300
        volumes:
          - emptyDir: {}
            name: tools
    - name: nebula-graphd
      configSpecs:
        - name: nebula-graphd-config
          templateRef: nebula-graphd-config-template
          volumnName: conf
      scriptSpecs:
        - name: nebula-graphd-scripts
          templateRef: nebula-graphd-scripts-template
          volumeName: scripts
          defaultMode: 493
      workloadType: Stateful
      characterType: nebula-graphd
      probes:
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 9187
      logConfigs:
      service:
        ports:
          - name: tcp-graphd
            port: 9779
            targetPort: tcp-graphd
      volumeTypes:
        - name: data
          type: data
      podSpec:
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        securityContext:
          fsGroup: 1001
        containers:
          - name: nebula-graphd
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - name: conf
                mountPath: /conf
              - name: scripts
                mountPath: /scripts
              - name: log
                mountPath: /log
            command: ["/scripts/nebula-graphd-start.sh"]
            imagePullPolicy: {{default .Values.nebula.graphd.image.pullPolicy "IfNotPresent"}}
            securityContext:
              runAsUser: 0
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /healthz
                port: 9091
                scheme: HTTP
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 10
            readinessProbe:
              failureThreshold: 2
              httpGet:
                path: /healthz
                port: 9091
                scheme: HTTP
              initialDelaySeconds: 5
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 3
            startupProbe:
              failureThreshold: 18
              httpGet:
                path: /healthz
                port: 9091
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 3
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            ports:
              - name: tcp-metad
                containerPort: 9779
              - name: tcp-metrics
                containerPort: 9091
            args:
            env:
              - name: CACHE_SIZE
                valueFrom:
                  resourceFieldRef:
                    divisor: 1Gi
                    resource: limits.memory
        serviceAccountName: default
        terminationGracePeriodSeconds: 300
        volumes:
          - emptyDir: {}
            name: tools